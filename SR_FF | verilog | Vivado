//DUT
module sr_ff(s,r,clk,rst,q,qb );
input s,r,clk,rst;
output reg q;
output qb;
reg Qb;

always @(posedge clk) begin
if (rst) begin
q <=1'b0;
Qb<=~q;
end

else 
case ({s,r})
2'b00 : begin q<=1'b0;Qb<=1'b1;end
2'b01 : begin q<=1'b0;Qb<=1'b1;end
2'b10 :begin q <= 1'b1; Qb<=1'b0;end
2'b11 : begin q <= 1'bx;Qb<=1'bx;end
default :begin q <= 1'bx;Qb<=1'bx;end
endcase
end
   assign qb=Qb; 
endmodule


//Testbench

module sr_ff_tb;
reg s,r,clk,rst;
wire q,qb;

sr_ff FF(.q(q),.qb(qb),.s(s),.r(r),.clk(clk),.rst(rst));

initial begin clk = 1'b0; rst = 1'b0 ; 
#5 rst = 1'b1; 
#10 rst = 1'b0;
end
always #5 clk = ~clk;

initial begin 
s = 1'b0 ; r = 1'b0 ; #10;
s = 1'b0 ; r = 1'b1 ; #10;
s = 1'b1 ; r = 1'b0 ; #10;
s = 1'b1 ; r = 1'b1 ; #10;
$finish;
end
endmodule
